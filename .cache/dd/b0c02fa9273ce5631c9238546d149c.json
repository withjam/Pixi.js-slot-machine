{"id":"node_modules/pixi/filters/DisplacementFilter.js","dependencies":[{"name":"/Users/mpileggi/snapyr/Pixi.js-slot-machine/package.json","includedInParent":true,"mtime":1606921189904},{"name":"/Users/mpileggi/snapyr/Pixi.js-slot-machine/node_modules/pixi/package.json","includedInParent":true,"mtime":1606921189822},{"name":"./AbstractFilter","loc":{"line":11,"column":1423},"parent":"/Users/mpileggi/snapyr/Pixi.js-slot-machine/node_modules/pixi/filters/DisplacementFilter.js","resolved":"/Users/mpileggi/snapyr/Pixi.js-slot-machine/node_modules/pixi/filters/AbstractFilter.js"}],"generated":{"js":"/**\n * pixi 0.3.1 (a1e2d46)\n * http://drkibitz.github.io/node-pixi/\n * Copyright (c) 2013-2015 Dr. Kibitz, http://drkibitz.com\n * Super fast 2D rendering engine for browserify, that uses WebGL with a context 2d fallback.\n * built: Fri May 22 2015 20:31:02 GMT-0700 (PDT)\n *\n * Pixi.js - v1.3.0\n * Copyright (c) 2012, Mat Groves\n */\n\"use strict\";function DisplacementFilter(a){AbstractFilter.call(this),this.passes=[this],a.baseTexture._powerOf2=!0,this.uniforms={displacementMap:{type:\"sampler2D\",value:a},scale:{type:\"2f\",value:{x:30,y:30}},offset:{type:\"2f\",value:{x:0,y:0}},mapDimensions:{type:\"2f\",value:{x:1,y:5112}},dimensions:{type:\"4fv\",value:[0,0,0,0]}},a.baseTexture.hasLoaded?(this.uniforms.mapDimensions.value.x=a.width,this.uniforms.mapDimensions.value.y=a.height):(this.boundLoadedFunction=this.onTextureLoaded.bind(this),a.baseTexture.on(\"loaded\",this.boundLoadedFunction)),this.fragmentSrc=[\"precision mediump float;\",\"varying vec2 vTextureCoord;\",\"varying float vColor;\",\"uniform sampler2D displacementMap;\",\"uniform sampler2D uSampler;\",\"uniform vec2 scale;\",\"uniform vec2 offset;\",\"uniform vec4 dimensions;\",\"uniform vec2 mapDimensions;\",\"void main(void) {\",\"   vec2 mapCords = vTextureCoord.xy;\",\"   mapCords += (dimensions.zw + offset)/ dimensions.xy ;\",\"   mapCords.y *= -1.0;\",\"   mapCords.y += 1.0;\",\"   vec2 matSample = texture2D(displacementMap, mapCords).xy;\",\"   matSample -= 0.5;\",\"   matSample *= scale;\",\"   matSample /= mapDimensions;\",\"   gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.x + matSample.x, vTextureCoord.y + matSample.y));\",\"   gl_FragColor.rgb = mix( gl_FragColor.rgb, gl_FragColor.rgb, 1.0);\",\"   vec2 cord = vTextureCoord;\",\"   gl_FragColor = gl_FragColor * vColor;\",\"}\"]}var AbstractFilter=require(\"./AbstractFilter\"),proto=DisplacementFilter.prototype=Object.create(AbstractFilter.prototype,{constructor:{value:DisplacementFilter}});proto.onTextureLoaded=function(){this.uniforms.mapDimensions.value.x=this.uniforms.displacementMap.value.width,this.uniforms.mapDimensions.value.y=this.uniforms.displacementMap.value.height,this.uniforms.displacementMap.value.baseTexture.off(\"loaded\",this.boundLoadedFunction)},Object.defineProperty(proto,\"map\",{get:function(){return this.uniforms.displacementMap.value},set:function(a){this.uniforms.displacementMap.value=a}}),Object.defineProperty(proto,\"scale\",{get:function(){return this.uniforms.scale.value},set:function(a){this.uniforms.scale.value=a}}),Object.defineProperty(proto,\"offset\",{get:function(){return this.uniforms.offset.value},set:function(a){this.uniforms.offset.value=a}}),module.exports=DisplacementFilter;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/pixi/filters/DisplacementFilter.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/pixi/filters/DisplacementFilter.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/pixi/filters/DisplacementFilter.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/pixi/filters/DisplacementFilter.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/pixi/filters/DisplacementFilter.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/pixi/filters/DisplacementFilter.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/pixi/filters/DisplacementFilter.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/pixi/filters/DisplacementFilter.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/pixi/filters/DisplacementFilter.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/pixi/filters/DisplacementFilter.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/pixi/filters/DisplacementFilter.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}}],"sources":{"node_modules/pixi/filters/DisplacementFilter.js":"/**\n * pixi 0.3.1 (a1e2d46)\n * http://drkibitz.github.io/node-pixi/\n * Copyright (c) 2013-2015 Dr. Kibitz, http://drkibitz.com\n * Super fast 2D rendering engine for browserify, that uses WebGL with a context 2d fallback.\n * built: Fri May 22 2015 20:31:02 GMT-0700 (PDT)\n *\n * Pixi.js - v1.3.0\n * Copyright (c) 2012, Mat Groves\n */\n\"use strict\";function DisplacementFilter(a){AbstractFilter.call(this),this.passes=[this],a.baseTexture._powerOf2=!0,this.uniforms={displacementMap:{type:\"sampler2D\",value:a},scale:{type:\"2f\",value:{x:30,y:30}},offset:{type:\"2f\",value:{x:0,y:0}},mapDimensions:{type:\"2f\",value:{x:1,y:5112}},dimensions:{type:\"4fv\",value:[0,0,0,0]}},a.baseTexture.hasLoaded?(this.uniforms.mapDimensions.value.x=a.width,this.uniforms.mapDimensions.value.y=a.height):(this.boundLoadedFunction=this.onTextureLoaded.bind(this),a.baseTexture.on(\"loaded\",this.boundLoadedFunction)),this.fragmentSrc=[\"precision mediump float;\",\"varying vec2 vTextureCoord;\",\"varying float vColor;\",\"uniform sampler2D displacementMap;\",\"uniform sampler2D uSampler;\",\"uniform vec2 scale;\",\"uniform vec2 offset;\",\"uniform vec4 dimensions;\",\"uniform vec2 mapDimensions;\",\"void main(void) {\",\"   vec2 mapCords = vTextureCoord.xy;\",\"   mapCords += (dimensions.zw + offset)/ dimensions.xy ;\",\"   mapCords.y *= -1.0;\",\"   mapCords.y += 1.0;\",\"   vec2 matSample = texture2D(displacementMap, mapCords).xy;\",\"   matSample -= 0.5;\",\"   matSample *= scale;\",\"   matSample /= mapDimensions;\",\"   gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.x + matSample.x, vTextureCoord.y + matSample.y));\",\"   gl_FragColor.rgb = mix( gl_FragColor.rgb, gl_FragColor.rgb, 1.0);\",\"   vec2 cord = vTextureCoord;\",\"   gl_FragColor = gl_FragColor * vColor;\",\"}\"]}var AbstractFilter=require(\"./AbstractFilter\"),proto=DisplacementFilter.prototype=Object.create(AbstractFilter.prototype,{constructor:{value:DisplacementFilter}});proto.onTextureLoaded=function(){this.uniforms.mapDimensions.value.x=this.uniforms.displacementMap.value.width,this.uniforms.mapDimensions.value.y=this.uniforms.displacementMap.value.height,this.uniforms.displacementMap.value.baseTexture.off(\"loaded\",this.boundLoadedFunction)},Object.defineProperty(proto,\"map\",{get:function(){return this.uniforms.displacementMap.value},set:function(a){this.uniforms.displacementMap.value=a}}),Object.defineProperty(proto,\"scale\",{get:function(){return this.uniforms.scale.value},set:function(a){this.uniforms.scale.value=a}}),Object.defineProperty(proto,\"offset\",{get:function(){return this.uniforms.offset.value},set:function(a){this.uniforms.offset.value=a}}),module.exports=DisplacementFilter;"},"lineCount":11}},"error":null,"hash":"9234b0b446d1ac87229730bb844e996c","cacheData":{"env":{}}}
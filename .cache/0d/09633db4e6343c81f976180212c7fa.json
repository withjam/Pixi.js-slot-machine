{"id":"node_modules/pixi/extras/Spine.js","dependencies":[{"name":"/Users/mpileggi/snapyr/Pixi.js-slot-machine/package.json","includedInParent":true,"mtime":1606921189904},{"name":"/Users/mpileggi/snapyr/Pixi.js-slot-machine/node_modules/pixi/package.json","includedInParent":true,"mtime":1606921189822},{"name":"../utils/spine","loc":{"line":11,"column":782},"parent":"/Users/mpileggi/snapyr/Pixi.js-slot-machine/node_modules/pixi/extras/Spine.js","resolved":"/Users/mpileggi/snapyr/Pixi.js-slot-machine/node_modules/pixi/utils/spine.js"},{"name":"../display/DisplayObjectContainer","loc":{"line":11,"column":831},"parent":"/Users/mpileggi/snapyr/Pixi.js-slot-machine/node_modules/pixi/extras/Spine.js","resolved":"/Users/mpileggi/snapyr/Pixi.js-slot-machine/node_modules/pixi/display/DisplayObjectContainer.js"},{"name":"../display/Sprite","loc":{"line":11,"column":883},"parent":"/Users/mpileggi/snapyr/Pixi.js-slot-machine/node_modules/pixi/extras/Spine.js","resolved":"/Users/mpileggi/snapyr/Pixi.js-slot-machine/node_modules/pixi/display/Sprite.js"},{"name":"../textures/Texture","loc":{"line":11,"column":920},"parent":"/Users/mpileggi/snapyr/Pixi.js-slot-machine/node_modules/pixi/extras/Spine.js","resolved":"/Users/mpileggi/snapyr/Pixi.js-slot-machine/node_modules/pixi/textures/Texture.js"}],"generated":{"js":"/**\n * pixi 0.3.1 (a1e2d46)\n * http://drkibitz.github.io/node-pixi/\n * Copyright (c) 2013-2015 Dr. Kibitz, http://drkibitz.com\n * Super fast 2D rendering engine for browserify, that uses WebGL with a context 2d fallback.\n * built: Fri May 22 2015 20:31:02 GMT-0700 (PDT)\n *\n * Pixi.js - v1.3.0\n * Copyright (c) 2012, Mat Groves\n */\n\"use strict\";function Spine(a){if(DisplayObjectContainer.call(this),this.spineData=Spine.animCache[a],!this.spineData)throw new Error(\"Spine data must be preloaded using SpineLoader or AssetLoader: \"+a);this.skeleton=new spine.Skeleton(this.spineData),this.skeleton.updateWorldTransform(),this.stateData=new spine.AnimationStateData(this.spineData),this.state=new spine.AnimationState(this.stateData),this.slotContainers=[];for(var b=0,c=this.skeleton.drawOrder.length;c>b;b++){var d=this.skeleton.drawOrder[b],e=d.attachment,f=new DisplayObjectContainer;if(this.slotContainers.push(f),this.addChild(f),e instanceof spine.RegionAttachment){var g=e.rendererObject.name,h=this.createSprite(d,e.rendererObject);d.currentSprite=h,d.currentSpriteName=g,f.addChild(h)}}}var spine=require(\"../utils/spine\"),DisplayObjectContainer=require(\"../display/DisplayObjectContainer\"),Sprite=require(\"../display/Sprite\"),Texture=require(\"../textures/Texture\"),proto=Spine.prototype=Object.create(DisplayObjectContainer.prototype,{constructor:{value:Spine}});proto.updateTransform=function(){this.lastTime=this.lastTime||Date.now();var a=.001*(Date.now()-this.lastTime);this.lastTime=Date.now(),this.state.update(a),this.state.apply(this.skeleton),this.skeleton.updateWorldTransform();for(var b=this.skeleton.drawOrder,c=0,d=b.length;d>c;c++){var e=b[c],f=e.attachment,g=this.slotContainers[c];if(f instanceof spine.RegionAttachment){if(f.rendererObject&&(!e.currentSpriteName||e.currentSpriteName!==f.name)){var h=f.rendererObject.name;if(void 0!==e.currentSprite&&(e.currentSprite.visible=!1),e.sprites=e.sprites||{},void 0!==e.sprites[h])e.sprites[h].visible=!0;else{var i=this.createSprite(e,f.rendererObject);g.addChild(i)}e.currentSprite=e.sprites[h],e.currentSpriteName=h}g.visible=!0;var j=e.bone;g.position.x=j.worldX+f.x*j.m00+f.y*j.m01,g.position.y=j.worldY+f.x*j.m10+f.y*j.m11,g.scale.x=j.worldScaleX,g.scale.y=j.worldScaleY,g.rotation=-(e.bone.worldRotation*Math.PI/180)}else g.visible=!1}DisplayObjectContainer.prototype.updateTransform.call(this)},proto.createSprite=function(a,b){var c=Texture.cache[b.name]?b.name:b.name+\".png\",d=new Sprite(Texture.fromFrame(c));return d.scale=b.scale,d.rotation=b.rotation,d.anchor.x=d.anchor.y=.5,a.sprites=a.sprites||{},a.sprites[b.name]=d,d},Spine.animCache={},module.exports=Spine;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/pixi/extras/Spine.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/pixi/extras/Spine.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/pixi/extras/Spine.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/pixi/extras/Spine.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/pixi/extras/Spine.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/pixi/extras/Spine.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/pixi/extras/Spine.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/pixi/extras/Spine.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/pixi/extras/Spine.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/pixi/extras/Spine.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/pixi/extras/Spine.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}}],"sources":{"node_modules/pixi/extras/Spine.js":"/**\n * pixi 0.3.1 (a1e2d46)\n * http://drkibitz.github.io/node-pixi/\n * Copyright (c) 2013-2015 Dr. Kibitz, http://drkibitz.com\n * Super fast 2D rendering engine for browserify, that uses WebGL with a context 2d fallback.\n * built: Fri May 22 2015 20:31:02 GMT-0700 (PDT)\n *\n * Pixi.js - v1.3.0\n * Copyright (c) 2012, Mat Groves\n */\n\"use strict\";function Spine(a){if(DisplayObjectContainer.call(this),this.spineData=Spine.animCache[a],!this.spineData)throw new Error(\"Spine data must be preloaded using SpineLoader or AssetLoader: \"+a);this.skeleton=new spine.Skeleton(this.spineData),this.skeleton.updateWorldTransform(),this.stateData=new spine.AnimationStateData(this.spineData),this.state=new spine.AnimationState(this.stateData),this.slotContainers=[];for(var b=0,c=this.skeleton.drawOrder.length;c>b;b++){var d=this.skeleton.drawOrder[b],e=d.attachment,f=new DisplayObjectContainer;if(this.slotContainers.push(f),this.addChild(f),e instanceof spine.RegionAttachment){var g=e.rendererObject.name,h=this.createSprite(d,e.rendererObject);d.currentSprite=h,d.currentSpriteName=g,f.addChild(h)}}}var spine=require(\"../utils/spine\"),DisplayObjectContainer=require(\"../display/DisplayObjectContainer\"),Sprite=require(\"../display/Sprite\"),Texture=require(\"../textures/Texture\"),proto=Spine.prototype=Object.create(DisplayObjectContainer.prototype,{constructor:{value:Spine}});proto.updateTransform=function(){this.lastTime=this.lastTime||Date.now();var a=.001*(Date.now()-this.lastTime);this.lastTime=Date.now(),this.state.update(a),this.state.apply(this.skeleton),this.skeleton.updateWorldTransform();for(var b=this.skeleton.drawOrder,c=0,d=b.length;d>c;c++){var e=b[c],f=e.attachment,g=this.slotContainers[c];if(f instanceof spine.RegionAttachment){if(f.rendererObject&&(!e.currentSpriteName||e.currentSpriteName!==f.name)){var h=f.rendererObject.name;if(void 0!==e.currentSprite&&(e.currentSprite.visible=!1),e.sprites=e.sprites||{},void 0!==e.sprites[h])e.sprites[h].visible=!0;else{var i=this.createSprite(e,f.rendererObject);g.addChild(i)}e.currentSprite=e.sprites[h],e.currentSpriteName=h}g.visible=!0;var j=e.bone;g.position.x=j.worldX+f.x*j.m00+f.y*j.m01,g.position.y=j.worldY+f.x*j.m10+f.y*j.m11,g.scale.x=j.worldScaleX,g.scale.y=j.worldScaleY,g.rotation=-(e.bone.worldRotation*Math.PI/180)}else g.visible=!1}DisplayObjectContainer.prototype.updateTransform.call(this)},proto.createSprite=function(a,b){var c=Texture.cache[b.name]?b.name:b.name+\".png\",d=new Sprite(Texture.fromFrame(c));return d.scale=b.scale,d.rotation=b.rotation,d.anchor.x=d.anchor.y=.5,a.sprites=a.sprites||{},a.sprites[b.name]=d,d},Spine.animCache={},module.exports=Spine;"},"lineCount":11}},"error":null,"hash":"107e410507cbd882737380db88b910dc","cacheData":{"env":{}}}
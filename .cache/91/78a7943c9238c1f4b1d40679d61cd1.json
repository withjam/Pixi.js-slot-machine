{"id":"node_modules/pixi/renderers/webgl/StripShader.js","dependencies":[{"name":"/Users/mpileggi/snapyr/Pixi.js-slot-machine/package.json","includedInParent":true,"mtime":1606921189904},{"name":"/Users/mpileggi/snapyr/Pixi.js-slot-machine/node_modules/pixi/package.json","includedInParent":true,"mtime":1606921189822},{"name":"./compile","loc":{"line":11,"column":905},"parent":"/Users/mpileggi/snapyr/Pixi.js-slot-machine/node_modules/pixi/renderers/webgl/StripShader.js","resolved":"/Users/mpileggi/snapyr/Pixi.js-slot-machine/node_modules/pixi/renderers/webgl/compile.js"},{"name":"../../core/globals","loc":{"line":11,"column":934},"parent":"/Users/mpileggi/snapyr/Pixi.js-slot-machine/node_modules/pixi/renderers/webgl/StripShader.js","resolved":"/Users/mpileggi/snapyr/Pixi.js-slot-machine/node_modules/pixi/core/globals.js"}],"generated":{"js":"/**\n * pixi 0.3.1 (a1e2d46)\n * http://drkibitz.github.io/node-pixi/\n * Copyright (c) 2013-2015 Dr. Kibitz, http://drkibitz.com\n * Super fast 2D rendering engine for browserify, that uses WebGL with a context 2d fallback.\n * built: Fri May 22 2015 20:31:02 GMT-0700 (PDT)\n *\n * Pixi.js - v1.3.0\n * Copyright (c) 2012, Mat Groves\n */\n\"use strict\";function StripShader(){this.program=null,this.fragmentSrc=[\"precision mediump float;\",\"varying vec2 vTextureCoord;\",\"varying float vColor;\",\"uniform float alpha;\",\"uniform sampler2D uSampler;\",\"void main(void) {\",\"   gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y));\",\"   gl_FragColor = gl_FragColor * alpha;\",\"}\"],this.vertexSrc=[\"attribute vec2 aVertexPosition;\",\"attribute vec2 aTextureCoord;\",\"attribute float aColor;\",\"uniform mat3 translationMatrix;\",\"uniform vec2 projectionVector;\",\"varying vec2 vTextureCoord;\",\"varying vec2 offsetVector;\",\"varying float vColor;\",\"void main(void) {\",\"   vec3 v = translationMatrix * vec3(aVertexPosition, 1.0);\",\"   v -= offsetVector.xyx;\",\"   gl_Position = vec4( v.x / projectionVector.x -1.0, v.y / projectionVector.y + 1.0 , 0.0, 1.0);\",\"   vTextureCoord = aTextureCoord;\",\"   vColor = aColor;\",\"}\"]}var compile=require(\"./compile\"),globals=require(\"../../core/globals\");StripShader.prototype.init=function(){var a=globals.gl,b=compile.program(a,this.vertexSrc,this.fragmentSrc);a.useProgram(b),this.uSampler=a.getUniformLocation(b,\"uSampler\"),this.projectionVector=a.getUniformLocation(b,\"projectionVector\"),this.offsetVector=a.getUniformLocation(b,\"offsetVector\"),this.colorAttribute=a.getAttribLocation(b,\"aColor\"),this.aVertexPosition=a.getAttribLocation(b,\"aVertexPosition\"),this.aTextureCoord=a.getAttribLocation(b,\"aTextureCoord\"),this.translationMatrix=a.getUniformLocation(b,\"translationMatrix\"),this.alpha=a.getUniformLocation(b,\"alpha\"),this.program=b},module.exports=StripShader;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/pixi/renderers/webgl/StripShader.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/pixi/renderers/webgl/StripShader.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/pixi/renderers/webgl/StripShader.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/pixi/renderers/webgl/StripShader.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/pixi/renderers/webgl/StripShader.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/pixi/renderers/webgl/StripShader.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/pixi/renderers/webgl/StripShader.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/pixi/renderers/webgl/StripShader.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/pixi/renderers/webgl/StripShader.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/pixi/renderers/webgl/StripShader.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/pixi/renderers/webgl/StripShader.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}}],"sources":{"node_modules/pixi/renderers/webgl/StripShader.js":"/**\n * pixi 0.3.1 (a1e2d46)\n * http://drkibitz.github.io/node-pixi/\n * Copyright (c) 2013-2015 Dr. Kibitz, http://drkibitz.com\n * Super fast 2D rendering engine for browserify, that uses WebGL with a context 2d fallback.\n * built: Fri May 22 2015 20:31:02 GMT-0700 (PDT)\n *\n * Pixi.js - v1.3.0\n * Copyright (c) 2012, Mat Groves\n */\n\"use strict\";function StripShader(){this.program=null,this.fragmentSrc=[\"precision mediump float;\",\"varying vec2 vTextureCoord;\",\"varying float vColor;\",\"uniform float alpha;\",\"uniform sampler2D uSampler;\",\"void main(void) {\",\"   gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.x, vTextureCoord.y));\",\"   gl_FragColor = gl_FragColor * alpha;\",\"}\"],this.vertexSrc=[\"attribute vec2 aVertexPosition;\",\"attribute vec2 aTextureCoord;\",\"attribute float aColor;\",\"uniform mat3 translationMatrix;\",\"uniform vec2 projectionVector;\",\"varying vec2 vTextureCoord;\",\"varying vec2 offsetVector;\",\"varying float vColor;\",\"void main(void) {\",\"   vec3 v = translationMatrix * vec3(aVertexPosition, 1.0);\",\"   v -= offsetVector.xyx;\",\"   gl_Position = vec4( v.x / projectionVector.x -1.0, v.y / projectionVector.y + 1.0 , 0.0, 1.0);\",\"   vTextureCoord = aTextureCoord;\",\"   vColor = aColor;\",\"}\"]}var compile=require(\"./compile\"),globals=require(\"../../core/globals\");StripShader.prototype.init=function(){var a=globals.gl,b=compile.program(a,this.vertexSrc,this.fragmentSrc);a.useProgram(b),this.uSampler=a.getUniformLocation(b,\"uSampler\"),this.projectionVector=a.getUniformLocation(b,\"projectionVector\"),this.offsetVector=a.getUniformLocation(b,\"offsetVector\"),this.colorAttribute=a.getAttribLocation(b,\"aColor\"),this.aVertexPosition=a.getAttribLocation(b,\"aVertexPosition\"),this.aTextureCoord=a.getAttribLocation(b,\"aTextureCoord\"),this.translationMatrix=a.getUniformLocation(b,\"translationMatrix\"),this.alpha=a.getUniformLocation(b,\"alpha\"),this.program=b},module.exports=StripShader;"},"lineCount":11}},"error":null,"hash":"14d75a4d897cd53c9a90b5bac5650f0f","cacheData":{"env":{}}}